{"version":3,"file":"main.71a79a9534ade168.js","mappings":"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","sources":["./src/app/Errors/not-found/not-found.component.ts","./src/app/Errors/not-found/not-found.component.html","./src/app/Errors/server-error/server-error.component.ts","./src/app/Errors/server-error/server-error.component.html","./src/app/Errors/test-errors/test-errors.component.ts","./src/app/Errors/test-errors/test-errors.component.html","./src/app/Modals/confirm-dialog/confirm-dialog.component.ts","./src/app/Modals/confirm-dialog/confirm-dialog.component.html","./src/app/Modals/roles-modal/roles-modal.component.ts","./src/app/Modals/roles-modal/roles-modal.component.html","./src/app/_Resolvers/member_detailed_resolver.ts","./src/app/_directives/has-role.directive.ts","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_guards/admin.guard.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_interceptors/loading.interceptor.ts","./src/app/_models/pagination.ts","./src/app/_models/userParmas.ts","./src/app/_modules/shared.module.ts","./src/app/_services/account.service.ts","./src/app/_services/admin.service.ts","./src/app/_services/busy.service.ts","./src/app/_services/confirm.service.ts","./src/app/_services/members.service.ts","./src/app/_services/message.service.ts","./src/app/_services/paginationHelper.ts","./src/app/_services/presence.service.ts","./src/app/admin/admin/admin.component.ts","./src/app/admin/admin/admin.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-details/member-details.component.ts","./src/app/members/member-details/member-details.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-lists/member-lists.component.ts","./src/app/members/member-lists/member-lists.component.html","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.prod.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"page_404\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <div class=\"col-sm-10 col-sm-offset-1 text-center\">\n          <div class=\"four_zero_four_bg\">\n            <h1 class=\"text-center\">404</h1>\n          </div>\n\n          <div class=\"contant_box_404\">\n            <h3 class=\"h2\">Look like you're lost</h3>\n\n            <p>the page you are looking for not avaible!</p>\n\n            <a routerLink=\"/\" class=\"link_404\">Go to Home</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\nerror:any\n  constructor(private router:Router) {\n    const navigation=this.router.getCurrentNavigation();\n    this.error=navigation?.extras?.state?.['error']\n   }\n\n  ngOnInit(): void {\n    console.log(this.error)\n  }\n\n}\n","<h4>Internal Server Error --refressing the page will help</h4>\n<ng-container *ngIf=\"error\">\n  <h4 class=\"text-danger\">Error : {{ error.mesaage }}</h4>\n  <p class=\"font-weight-bold\">\n    Note : If you are seeing this then Angular is properly not to blame\n  </p>\n  <p>What to do next</p>\n  <ol>\n    <li>Open the Chrome Dev Tools</li>\n    <li>Inspect the network tab</li>\n    <li>Check the failling Request</li>\n    <li>Examin the URL - Make sure it is Correct</li>\n    <li>Reproduce the Post man if it is workin gcheck Angular</li>\n  </ol>\n  <p>Th Following is the stack trace</p>\n  <code class=\"m-5\" style=\"background-color: whitesmoke\"\n    >{{ error.details }}\n  </code>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n\nbaseUrl=environment.apiUrl\nvalidationErrors:string[]=[];\n  constructor(private http:HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n    get404Error(){\n      this.http.get(this.baseUrl+\"buggy/not-found\").subscribe(response=>{\n        console.log(response)\n        },error=>{\n          console.log(error)\n            })\n      }\n    get500Error(){\n      this.http.get(this.baseUrl+\"buggy/server-error\").subscribe(response=>{\n        console.log(response)\n        },error=>{\n          console.log(error)\n            })\n      }\n    get401Error(){\n      this.http.get(this.baseUrl+\"buggy/auth\").subscribe(response=>{\n        console.log(response)\n        },error=>{\n          console.log(error)\n            })\n      }\n    get400Error(){\n        this.http.get(this.baseUrl+\"buggy/bad-request\").subscribe(response=>{\n        console.log(response)\n        },error=>{\n          console.log(error)\n            })\n        }\n    get400ValidateError(){\n    this.http.post(this.baseUrl+\"account/register\",{}).subscribe(response=>{\n      console.log(response)\n      },error=>{\n        console.log(error)\n        this.validationErrors=error\n          })\n        }\n\n\n  }\n","<ng-container>\n  <button (click)=\"get500Error()\" class=\"bt btn-outline-primary m-3\">\n    Test 500 Error\n  </button>\n  <button (click)=\"get400Error()\" class=\"bt btn-outline-primary m-3\">\n    Test 400 Error\n  </button>\n  <button (click)=\"get401Error()\" class=\"bt btn-outline-primary m-3\">\n    Test 401 Error\n  </button>\n  <button (click)=\"get404Error()\" class=\"bt btn-outline-primary m-3\">\n    Test 404 Error\n  </button>\n  <button (click)=\"get400ValidateError()\" class=\"bt btn-outline-primary mr-3\">\n    Test 404 Validate Error\n  </button>\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">{{ error }}</li>\n    </ul>\n  </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\ntitle=''\nmessage=''\nbtnOkText=''\nbtnCancelText=''\nresult:boolean;\n\n  constructor(public BsModalRef:BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(){\n    this.result=true;\n    this.BsModalRef.hide();\n\n\n    }\n\n decline(){\n    this.result=false;\n    this.BsModalRef.hide();\n\n    }\n    \n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ title }}</h4>\n  <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\">\n    <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  {{ message }}\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n    {{ btnOkText }}\n  </button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n    {{ btnCancelText }}\n  </button>\n</div>\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from './../../_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n@Input()  updateSelectedRoles=new EventEmitter();\nuser:User\nroles:any[];\n\n  constructor(public BsModalRef: BsModalRef) {}\n \n  ngOnInit() {\n    \n  }\n  updateUserRoles(){ \nthis.updateSelectedRoles.emit(this.roles);\nthis.BsModalRef.hide();\n\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit Roles For {{ user.userName }}</h4>\n\n  <button\n    type=\"button\"\n    class=\"btn-close close pull-right\"\n    aria-label=\"Close\"\n    (click)=\"BsModalRef.hide()\"\n  >\n    <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        [checked]=\"role.checked\"\n        [value]=\"role.name\"\n        (change)=\"role.checked = !role.checked\"\n        [disabled]=\"role.name === 'admin' && user.userName === 'admin'\"\n      />\n      <label>{{ role.name }}</label>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"updateUserRoles()\">\n    Submit\n  </button>\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"BsModalRef.hide()\">\n    Cancel\n  </button>\n</div>\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Member } from './../_models/Member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Injectable({\r\n    providedIn :'root'\r\n})\r\nexport class memberDetailedResolver implements Resolve<Member>{\r\n  constructor(private memberservice:MembersService){\r\n    }\r\n    \r\n    resolve(route: ActivatedRouteSnapshot):Observable<Member> {\r\n     return this.memberservice.getMember(route.paramMap.get('username'))\r\n    }\r\n      \r\n\r\n}","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { take } from 'rxjs';\nimport { User } from 'src/app/_models/user';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit{\n  @Input() appHasRole:string[]\n  user:User\n  constructor(private viewContainerRef:ViewContainerRef,\n    private templateRef:TemplateRef<any>,\n    private accountService:AccountService) {\n      this.accountService.CurrentUser$.pipe(take(1)).subscribe(user=>{\n        this.user=user\n      })\n     }\n  ngOnInit(): void {\n   if (!this.user?.roles|| this.user==null) {\n     this.viewContainerRef.clear()\n     return ;\n   }\n   if (this.user?.roles.some(r=> this.appHasRole.includes(r))) {\n     this.viewContainerRef.createEmbeddedView(this.templateRef)\n   }else{\n   this.viewContainerRef.clear()\n  }}\n\n\n}\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl, FormControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n@Input() label:string;\n@Input() maxDate:Date;\nget control () {\n  return this.ngcontrol.control as FormControl\n}\n//only partial settings\nbsConfig?:Partial<BsDatepickerConfig> ;\n\n  constructor(@Self() public ngcontrol:NgControl) { \n    this.ngcontrol.valueAccessor=this\n    this.bsConfig= { containerClass: 'theme-red',\n                    dateInputFormat:'DD-MMMM-YYYY'        \n  \n  }\n\n  }\n  writeValue(obj: any): void {\n   \n  }\n  registerOnChange(fn: any): void {\n   \n  }\n  registerOnTouched(fn: any): void {\n    \n  }\n\n\n\n}\n","<div class=\"form-group\">\n  <input\n    type=\"text\"\n    [class.is-invalid]=\"control.touched && control.invalid\"\n    class=\"form-control\"\n    [formControl]=\"control\"\n    placeholder=\"{{ label }}\"\n    bsDatepicker\n    [bsConfig]=\"bsConfig\"\n    [maxDate]=\"maxDate\"\n  />\n  <div *ngIf=\"control.errors?.['required']\" class=\"invalid-feedback\">\n    {{ label }} required\n  </div>\n</div>\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n@Input() label:string;\n@Input() type='test';\nget control () {\n  return this.ngcontrol.control as FormControl\n}\n  //Self uses the same service of dependency injection\n  constructor(@Self() public ngcontrol:NgControl) {\n    this.ngcontrol.valueAccessor=this;\n   }\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n   \n  }\n  \n}\n","<div class=\"form-group\">\n  <input\n    [class.is-invalid]=\"ngcontrol.touched && ngcontrol.invalid\"\n    type=\"{{ type }}\"\n    class=\"form-control m-2\"\n    [formControl]=\"control\"\n    placeholder=\"{{ label }}\"\n  />\n  <div *ngIf=\"control.errors?.['required']\" class=\"invalid-feedback\">\n    Please enter a {{ label }}\n  </div>\n  <div *ngIf=\"control.errors?.['minlength']\" class=\"invalid-feedback\">\n    {{ label }} must be at least\n    {{control.errors?.['minlength']?.requiredLength}}\n  </div>\n  <div *ngIf=\"control.errors?.['isMatching']\" class=\"invalid-feedback\">\n    passwords are not match\n  </div>\n  <!-- validations must be lower cases -->\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from './../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private AccountService :AccountService,\n    private roastr:ToastrService){}\n\n  canActivate(): Observable<boolean> {\n  return this.AccountService.CurrentUser$.pipe(map(user=> {\n  if (user.roles.includes(\"Admin\") || user.roles.includes(\"Moderator\"))\n    {\n      return true;\n    }\n    this.roastr.error(\"you can not enter this Area\");\n     return false;\n  }))\n\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, map } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private accountService:AccountService,\n    private toastr:ToastrService\n    ){}\n\n  canActivate(): Observable<boolean > {\n    \n    return this.accountService.CurrentUser$.pipe(\n      map(user=>{\n        if(user){return true;}\n        else{this.toastr.error(\"you shall not pass! \"); return false}\n    })\n    );\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from './../members/member-edit/member-edit.component';\nimport { ConfirmService } from './../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  constructor(private ConfirmService:ConfirmService){}\n  canDeactivate(\n    component: MemberEditComponent):Observable<boolean> |boolean{\n      if (component.editform.dirty) {\n        return this.ConfirmService.Confirm()   \n      }\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { NavigationEnd, NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof(error.error) === 'object') {\n                this.toastr.error(error.statusText, error.status);\n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, take } from 'rxjs';\nimport { AccountService } from './../_services/account.service';\nimport { User } from '../_models/user';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private account:AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let  currentUser:User;\n\n    this.account.CurrentUser$.pipe(take(1)).subscribe(user=>\n      currentUser=user)\n      //geting the token from the CurrentUser\n     \nif (currentUser) {\n request= request.clone(\n   {\n     setHeaders:{\n       Authorization:`Bearer ${currentUser.token}`\n     }\n   }\n  )\n}\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { delay, finalize, Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyservice:BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyservice.busy();\n    return next.handle(request).pipe(\n     finalize(()=>{\n       this.busyservice.idle()\n     })\n    )\n  }\n}\n\n\n","\n\n\n\nexport interface Pagination {\n    currentPage:number;\n    itemsPerPage:number;\n    totalItems:number;\n    totalPages:number;\n}\n\nexport class PaginatedResult<T>{\n    result:T;\n    Pagination:Pagination;\n}","\r\n\r\nimport { User } from 'src/app/_models/user';\r\n\r\nexport class userParmas{\r\n     gender:string;\r\n     minAge=18;\r\n     maxAge=99;\r\n     PageNumber=1;\r\n     pageSize=5;\r\n     orderBy=\"lastActive\";\r\n     constructor(user:User){\r\n            this.gender=user.gender===\"female\"?\"male\":\"female\";\r\n     }\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport{TabsModule}from\"ngx-bootstrap/tabs\"\nimport{NgxGalleryModule}from\"@kolkov/ngx-gallery\"\nimport { FileUploadModule } from 'ng2-file-upload';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\n\n@NgModule({\n  declarations: [],\n  imports: [\n CommonModule,\n     BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({positionClass:'toast-bottom-right'}),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot()\n  ],\n  exports:[\n    BsDropdownModule,\n     ToastrModule,\n     TabsModule,\n     NgxGalleryModule,\n     FileUploadModule,\n     MatRadioModule,\n     BsDatepickerModule,\n     PaginationModule,\n     ButtonsModule,\n     TimeagoModule\n     \n  \n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, ReplaySubject } from 'rxjs';\nimport { User } from '../_models/user';\nimport { environment } from './../../environments/environment';\nimport { PresenceService } from './presence.service';\n\n\n\n//singleton services\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\nbaseUrl=environment.apiUrl;\n//buffersubject emit last value ==>1\n// any can subscribe and see if any thing changed\nprivate CurrentUserSource=new ReplaySubject<User>(1);\nCurrentUser$=this.CurrentUserSource.asObservable()\n\n  constructor(private http:HttpClient,private presence :PresenceService) { }\n\n  login(model:User){\n\n      return this.http.post(this.baseUrl+'account/login',model).pipe(\n        map((response:User)=>{\n          const user=response;\n          if(user){\n            this.setcurrentuser(user)\n            this.presence.createHubConnection(user);\n          }\n        })\n      )\n  \n    \n  }\n  register(model:any){\n    return this.http.post(this.baseUrl+'account/register',model).pipe(\n      map((user:User)=>{\n        if(user){\n            this.setcurrentuser(user)\n            this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\nsetcurrentuser(user:User){\n  user.roles=[];\n const Roles= this.getDecodedToken(user.token).role\n \n //if not array of roles , one role\n\n Array.isArray(Roles)? user.roles= Roles :user.roles.push(Roles);\n\n          //add to the local storage\n     localStorage.setItem('user',JSON.stringify(user))\n          //add to observable to get it in the component\n    this.CurrentUserSource.next(user);\n  }\n  logout(){\n    localStorage.removeItem('user')\n    this.CurrentUserSource.next(null);\n    this.presence.stophabConnection();\n\n  }\n\n  getDecodedToken(token:string){\n    return JSON.parse(atob(token.split('.')[1]))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/_models/user';\nimport { Photo } from './../_models/Photo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\nbaseURL=environment.apiUrl\n  constructor(private http:HttpClient) { }\n  getUsersWithRoles(){\n    return this.http.get<Partial<User[]>>(this.baseURL+'admin/users-with-roles');\n  }\nupdateUserRoles(username:string,roles:string[]){\n  return this.http.post(this.baseURL+'admin/edit-roles/'+username+'?roles='+roles,{})\n}\n\n  getPhotosForApproval(){\n   return this.http.get<Photo[]>(this.baseURL+\"admin/\"+\"photos-to-moderate\")\n  }\n\n   ApprovePhoto(photoID:number){\n   return this.http.post(this.baseURL+\"admin/approve-photo/\"+photoID,{})\n  }\n\n  rejectPhoto(photoID:number){\n  return this.http.post(this.baseURL+\"admin/reject-photo/\"+photoID,{})\n  }\n  \n\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\nBusyrequestCount=0;\n  constructor(private spinner:NgxSpinnerService) { }\n  busy(){\n    this.BusyrequestCount++;\n    this.spinner.show(undefined,{\n      type:'line-scale-party'\n       ,bdColor:\"rgb(255,255,255,0)\",\n       color:\"#333333\"})\n  }\n  idle(){\n    this.BusyrequestCount--;\n    if(this.BusyrequestCount <= 0){\n      this.BusyrequestCount=0;\n      this.spinner.hide();\n    }\n  }\n} \n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmDialogComponent } from './../Modals/confirm-dialog/confirm-dialog.component';\nimport { Observable, Observer, Subscription } from 'rxjs';\nimport { getpaginatedResult } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\nBsModalRef:BsModalRef;\n\n\n  constructor(private modalService:BsModalService) { }\n\n  Confirm(title='confirmation',message='Are you sure you want to do this?',btnOkText='Ok',btnCancelText='Cancel'):Observable<boolean>\n  {\n     \n    const config={\n      initialState:{\n        title,\n        message,\n        btnOkText,\n        btnCancelText\n      }\n    }\n\n    //show (Dailoug,configrations)\n    this.BsModalRef=this.modalService.show(ConfirmDialogComponent,config);\n\n    return new Observable<boolean>(this.getResult());\n  }\n\n\n\n  private getResult(){\n \n    return (observer)=>{\n      const Subscription=this.BsModalRef.onHidden.subscribe(()=>{\n        observer.next(this.BsModalRef.content?.result);\n        observer.complete();\n      });\n      return {\n        unsubscribe(){Subscription.unsubscribe();}\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport{Member}from \"../_models/Member\"\nimport { of, map, Observable, BehaviorSubject } from 'rxjs';\nimport { PaginatedResult } from '../_models/pagination';\nimport { Pagination } from './../_models/pagination';\nimport { userParmas } from './../_models/userParmas';\nimport { getpaginatedResult, getPaginationHeader } from './paginationHelper';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { User } from 'src/app/_models/user';\nimport { Message } from './../_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\nheaders = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\nbaseUrl=environment.apiUrl;\nmembers:Member[]=[];\n\n\n    constructor(private http:HttpClient) {}\n\n\n\n  getMembers(UserParmas:userParmas){\n    \n  let params=getPaginationHeader(UserParmas.PageNumber,UserParmas.pageSize);\n  params=params.append(\"minAge\",UserParmas.minAge.toString());\n  params=params.append(\"maxAge\",UserParmas.maxAge.toString());\n  params=params.append(\"gender\",UserParmas.gender);\n  params=params.append(\"orderBy\",UserParmas.orderBy);\n\n   //observe of params\n  return getpaginatedResult<Member[]>(this.baseUrl+'users',params,this.http)\n  \n  }\n\n  getMember(username:string){\n    const member=this.members.find(x=>x.userName===username)\n    if(member!==undefined){\n      return of( member)\n    }\n  return this.http.get<Member>(this.baseUrl+'users/' +username );\n  }\nupdateMember(member:Member){\nreturn this.http.put(this.baseUrl+'users',member).pipe(map(\n  ()=>{\n    const index =this.members.indexOf(member)\n    this.members[index]=member\n  }\n))\n\n}\n\nsetmainPhoto(PhotoID:number){\n    return this.http.put(this.baseUrl+'users/set-main-photo/'+PhotoID,{})\n}\ndeletePhoto(photoId:number){\n  return this.http.delete(this.baseUrl+'users/delete-photo/'+photoId)\n}\n\n\naddLike(username:string){\n  return this.http.post(this.baseUrl+\"likes/\"+username\n  ,{},{headers:this.headers,responseType:'text'})\n}\ngetlikes(predicate:string,pagenumber:number,pagesize:number){\n\n  let params=getPaginationHeader(pagenumber,pagesize);\n  params=params.append('predicate',predicate);\n\n  return getpaginatedResult<Partial<Member[]>>(this.baseUrl+'likes',params,this.http);\n\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { getpaginatedResult, getPaginationHeader } from './paginationHelper';\nimport { Message } from './../_models/message';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject, take } from 'rxjs';\nimport { User } from './../_models/user';\nimport { Group } from './../_models/Group';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MessageService {\n\n  baseUrl=environment.apiUrl;\n\n  \nhubUrl=environment.hubUrl;\nprivate MessageThreadSource =new BehaviorSubject<Message[]>([]);\nmessageThread$=this.MessageThreadSource.asObservable();\n\nprivate hubConnection:HubConnection;\n\n  constructor(private http:HttpClient) { }\n  \nCreateHubConnection(user:User,OtherUserName:string){\n  this.hubConnection=new HubConnectionBuilder()\n  .withUrl(this.hubUrl+\"message?user=\"+OtherUserName,{\n    accessTokenFactory:()=>user.token\n  })\n  .withAutomaticReconnect()\n  .build()\n  this.hubConnection.start().catch(err=>console.log(err));\n  \n  this.hubConnection.on(\"ReceiveMessageThread\",messages=>{\n    this.MessageThreadSource.next(messages);\n  })\n   this.hubConnection.on(\"NewMessage\",message=>{\n    this.messageThread$.pipe(take(1)).subscribe(messages=>{\n    this.MessageThreadSource.next([...messages,message])})\n  })\n  this.hubConnection.on(\"UpdatedGroup\",(Group:Group)=>{\n   if(Group.connections.some(x=>x.username==OtherUserName)){\n     this.messageThread$.pipe(take(1)).subscribe(messages=>{\n       messages.forEach(message=>{\n         if(!message.dateRead){\n           message.dateRead=new Date(Date.now());\n         }\n       })\n       this.MessageThreadSource.next([...messages]);\n     })\n   }\n  })\n}\n\nStopHubConnection(){\n  if (this.hubConnection) {\n  this.hubConnection.stop();\n  }\n}\ngetMessages(pageNumber,PageSize,container){\n  let params=getPaginationHeader(pageNumber,PageSize)\n  params=params.append(\"container\",container);\n  return getpaginatedResult<Message[]>(this.baseUrl+\"messages\",params,this.http)\n}\n\n getMessageThread(userName:string){\n  return this.http.get<Message[]>(this.baseUrl+'messages/thread/'+userName);\n }\n\n async sendMessage(username:string,content:string){\nreturn this.hubConnection.invoke(\"SendMessage\",{RecipientUserName:username,content}).catch(err=>console.log(err))\n }\n\n Deletmessage(id:number){\n   return this.http.delete(this.baseUrl+\"messages/\"+ id)\n }\n\n \n}\n","import { PaginatedResult } from \"../_models/pagination\";\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map } from \"rxjs\";\n\nexport function getpaginatedResult<T>(Url:string,params: HttpParams,http:HttpClient) {\nconst paginatedResult:PaginatedResult<T>=new PaginatedResult<T>();\n    return http.get<T>(Url,\n      { observe: 'response', params }).pipe(\n        map(response => {\n          //update result <memberDTO>\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') !== null) {\n            //update pagination\n            paginatedResult.Pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\nexport function  getPaginationHeader(pageNumber:number,pageSize:number) {\n        let params=new HttpParams();\n      //double check that the params =params to save changes\n      params = params.append('PageNumber', pageNumber.toString());\n      params = params.append('PageSize', pageSize.toString());\n    \n    return params;\n  }\n\n","import { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { environment } from 'src/environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/_models/user';\nimport { BehaviorSubject, take } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\nhubUrl=environment.hubUrl;\nprivate hubConnection:HubConnection\nprivate OnlineUSersSource=new BehaviorSubject<string[]>([])\nOnlineUSers$=this.OnlineUSersSource.asObservable();\nconstructor(private toastr:ToastrService,private router :Router\n  ) {}\n//1- createhubConnection\n//2- start\n//3- on \n//stop\n\n\n  createHubConnection(user:User){\n  this.hubConnection= new HubConnectionBuilder()\n  .withUrl(this.hubUrl+\"presence\",{\n    accessTokenFactory:()=>user.token\n  })\n  .withAutomaticReconnect()\n  .build();\nthis.hubConnection.start().catch(err=>console.log(err))\n\n\n  this.hubConnection.on('UserIsOnline',username=>{\n   this.OnlineUSers$.pipe(take(1)).subscribe(usernames=>{\n     this.OnlineUSersSource.next([...usernames,username])\n   })\n  })\n\n  this.hubConnection.on('UserIsOffline',username=>{\n  this.OnlineUSers$.pipe(take((1))).subscribe(usernames=>{\n    this.OnlineUSersSource.next([...usernames.filter(x=>x!==username)])\n  })\n  })\n\n  this.hubConnection.on('GetOnlineUsers',(usernames:string[])=>{\n    this.OnlineUSersSource.next(usernames);\n  })\n  \n  this.hubConnection.on('NewMessageReceived',({username,knownas})=>{\n     this.toastr.info(knownas+\" has Sent you a new message!\")\n     .onTap\n     .pipe(take(1)).subscribe(()=>this.router.navigateByUrl(\"/members/\"+username+\"?tab=4\"));\n     console.log(knownas)\n  })\n  }\n\n\n  stophabConnection(){\n  this.hubConnection.stop().catch(err=>console.log(err))\n}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n  <tabset class=\"member-tabset\">\n    <tab heading=\"user management\" *appHasRole=\"['Admin']\">\n      <div class=\"container\">\n        <app-user-management></app-user-management>\n      </div>\n    </tab>\n    <tab heading=\"Photo management\" *appHasRole=\"['Admin', 'Moderator']\">\n      <div class=\"container\">\n        <app-photo-management></app-photo-management>\n      </div>\n    </tab>\n  </tabset>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from './../../_services/admin.service';\nimport { Photo } from './../../_models/Photo';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\nPhotos:Photo[]\n  constructor(private AdminService:AdminService) { }\n\n  ngOnInit(): void {\n    this.getPhotosForApproval()\n  }\n  getPhotosForApproval(){\n      this.AdminService.getPhotosForApproval().subscribe((photos)=>{\n        this.Photos=photos\n        console.log(this.Photos)\n      })\n      \n  }\n\n  approvePhoto(photoId:number){\n    this.AdminService.ApprovePhoto(photoId).subscribe(()=>{\n      this.Photos.splice(this.Photos.findIndex(x=>x.id==photoId),1);\n    })\n  }\n\n    rejectPhoto(photoId:number){\n    this.AdminService.rejectPhoto(photoId).subscribe(()=>{\n      this.Photos.splice(this.Photos.findIndex(x=>x.id==photoId),1);\n    })\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of Photos\">\n    <h4>{{ photo.username }}</h4>\n    <img\n      src=\"{{ photo.url }}\"\n      class=\"img-thumbnail p-1\"\n      alt=\"{{ photo.username }}\"\n    />\n    <div class=\"text-center\">\n      <button\n        class=\"btn btn-sm btn-success mr-1\"\n        (click)=\"approvePhoto(photo.id)\"\n      >\n        Approve\n      </button>\n      <button class=\"btn btn-sm btndanger\" (click)=\"rejectPhoto(photo.id)\">\n        Reject\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/Modals/roles-modal/roles-modal.component';\nimport { User } from './../../_models/user';\nimport { AdminService } from './../../_services/admin.service';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\nusers:Partial<User[]>;\nmodalRef:BsModalRef\n\n  constructor(private admin:AdminService,\n    private modalService:BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles()\n  }\n  getUsersWithRoles(){\n    this.admin.getUsersWithRoles().subscribe(users=>{\n      this.users=users\n    })\n  }\n  \n  openRolesModal(user:User){\n    const config = {\n      class:'modal-dialog-centered',\n      initialState:{\n        user,\n        roles:this.GetRolesArray(user)\n      }\n      }\n      //emit the event\n      //ref = service.show\n      //ref.content.subscribe\n   \nthis.modalRef=this.modalService.show(RolesModalComponent,config);\nthis.modalRef.content?.updateSelectedRoles.subscribe((values)=>{\n  const rolestosend={\n    roles:[...values.filter(el=>el.checked==true).map(el=>el.name)]\n  };\n  if (rolestosend) {\n    this.admin.updateUserRoles(user.userName,rolestosend.roles).subscribe(()=>{\n      user.roles=[...rolestosend.roles]\n    })\n  }\n})\n\n    };\n    private GetRolesArray(user:User){\n      const RoleToGet=[]\n      const UserRoles=user.roles;\n      const availableRoles:any[]=[\n        {name:\"Admin\",value:\"Admin\"},\n        {name:\"Moderator\",value:\"Moderator\"},\n        {name:\"Member\",value:\"Member\"},\n      ]\n      availableRoles.forEach(r=>{\n       let IsMatch=false;\n        for (const userRole of UserRoles) {\n        if (r.name==userRole) {\n        IsMatch=true;\n        r.checked=true\n        RoleToGet.push(r)\n        break;}\n        }\n        //outer loop\n        if (!IsMatch) {\n          r.checked=false;\n          RoleToGet.push(r);\n        }\n      })\n      return RoleToGet;\n    }\n   \n  }\n  \n\n\n","<div class=\"container tablecontainer\">\n  <table class=\"basic-table table-headers table table-hover\">\n    <thead>\n      <tr>\n        <th style=\"width: 30%\">user name</th>\n        <th style=\"width: 40%\">Active Roles</th>\n        <th style=\"width: 30%\">Edit Roles</th>\n      </tr>\n      <tr style=\"height: 1rem; border: none; box-shadow: none\"></tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users\">\n        <td>{{ user.userName }}</td>\n        <td>{{ user.roles }}</td>\n        <td>\n          <button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">\n            Edit Roles\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\nimport { MemberListsComponent } from './members/member-lists/member-lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { TestErrorsComponent } from './Errors/test-errors/test-errors.component';\n  import { NotFoundComponent } from './Errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './Errors/server-error/server-error.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { memberDetailedResolver } from './_Resolvers/member_detailed_resolver';\nimport { AdminComponent } from './admin/admin/admin.component';\nimport { AdminGuard } from './_guards/admin.guard';\n\n\nconst routes: Routes = [\n  {path:'',component:HomeComponent},\n  {\n    path:'',\n    runGuardsAndResolvers:'always',\n    canActivate:[AuthGuard],\n    children:[\n  {path:'members',component:MemberListsComponent},\n\n  {path:'members/:username',component:MemberDetailsComponent,resolve:{member:memberDetailedResolver}},\n\n\n  {path:'member/edit',component:MemberEditComponent,canDeactivate:[PreventUnsavedChangesGuard]},\n  {path:'lists',component:ListsComponent},\n  {path:'messages',component:MessagesComponent},\n  {path:'admin',component:AdminComponent,canActivate:[AdminGuard]}\n    ]\n    ,\n  },\n    {path:\"errors\" ,component:TestErrorsComponent},\n       {path:\"not-found\" ,component:NotFoundComponent},\n       {path:\"server-error\" ,component:ServerErrorComponent},\n\n\n  //pathmatch:\"full\" means loop to the all components to make sure it doesn`t specified\n  {path:'**',component:NotFoundComponent,pathMatch:\"full\"},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n\n\n\nexports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'client';\n  users:any\n  constructor(private http:HttpClient,private accountservice:AccountService ,private presence:PresenceService){  }\n  ngOnInit(): void {\n\nthis.SetCurrentUser();\n  }\n  SetCurrentUser(){\n    const userAsObj:User=JSON.parse(localStorage.getItem('user'))  \n    if (userAsObj) {\n    this.accountservice.setcurrentuser(userAsObj);\n    this.presence.createHubConnection(userAsObj);\n    }\n\n}\n\n}\n\n\n\n","<ngx-spinner>\n  <h3>Loading...</h3>\n</ngx-spinner>\n<app-nav></app-nav>\n<div class=\"container-fluid mt-5\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport{HttpClientModule, HTTP_INTERCEPTORS}from\"@angular/common/http\";\nimport { NavComponent } from './nav/nav.component'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport{BsDropdownModule}from\"ngx-bootstrap/dropdown\";\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListsComponent } from './members/member-lists/member-lists.component';\n\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './Errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './Errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './Errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminComponent } from './admin/admin/admin.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from './Modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './Modals/confirm-dialog/confirm-dialog.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n   MemberListsComponent,\n   ListsComponent,\n   MessagesComponent,\n   TestErrorsComponent,\n   NotFoundComponent,\n  ServerErrorComponent,\n  MemberCardComponent,\n  MemberDetailsComponent,\n  MemberEditComponent,\n  PhotoEditorComponent,\n  TextInputComponent,\n  DateInputComponent,\n  MemberMessagesComponent,\n  AdminComponent,\n  HasRoleDirective,\n  UserManagementComponent,\n  PhotoManagementComponent,\n  RolesModalComponent,\n  ConfirmDialogComponent,\n\n\n  ],\n  imports: [\nBrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    SharedModule,\n    MatTabsModule,\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    ModalModule.forRoot()\n    \n    \n  ],\n  providers: [\n    {provide:HTTP_INTERCEPTORS,useClass:ErrorInterceptor,multi:true},\n    {provide:HTTP_INTERCEPTORS,useClass:JwtInterceptor,multi:true},\n    {provide:HTTP_INTERCEPTORS,useClass:LoadingInterceptor,multi:true}\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n2","import { Component, Input, OnInit } from '@angular/core';\nimport { AccountService } from './../_services/account.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nregisterMode=false;\n\n  constructor(private http:HttpClient) { }\n\n  ngOnInit(): void {\n  \n  }\nRegisterToggle(){\n  this.registerMode=!this.registerMode\n}\n\ncancelRegisterMode(event:boolean){\nthis.registerMode=event}\n}\n","<div class=\"container\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find Your match</h1>\n    <p class=\"lead\">Come on and see your matches ... all you is to sign up !</p>\n    <div class=\"text-center\">\n      <button (click)=\"RegisterToggle()\" class=\"btn btn-primary btn-lg m-2\">\n        Register\n      </button>\n      <button class=\"btn btn-info btn-lg\">Learn More</button>\n    </div>\n  </div>\n  <ng-container *ngIf=\"registerMode\">\n    <div class=\"col-12 justify-content-center\">\n      <app-register\n        (CancelRegister)=\"cancelRegisterMode($event)\"\n      ></app-register>\n    </div>\n  </ng-container>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Member } from 'src/app/_models/Member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { Pagination } from './../_models/pagination';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit ,OnDestroy {\nmembers:Partial< Member[]>;\n\npredicate='liked';\npagenumber=1;\npagesize=5;\npagination:Pagination\n  constructor(private memberservice:MembersService) { }\n\n  ngOnDestroy(): void {\n  \n  }\n\n  ngOnInit(\n    \n  ): void {\n  \n  this.loadlikes()\n \n  }\nloadlikes(){\n this.memberservice.getlikes(this.predicate,this.pagenumber,this.pagesize).subscribe(\n    response=>{\n    this.members=response.result;\n    this.pagination=response.Pagination\n    console.log(response.result)\n  })\n}\npagechanged(event:any){\n  this.pagenumber=event.page;\n  this.loadlikes();\n}\n\n}\n","<div class=\"container mt-3 alert alert-success\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"row col-12 col-md-\">\n      <div class=\"btn-group\">\n        <button\n          class=\"btn btn-outline-secondary m-2\"\n          name=\"likedBy\"\n          (click)=\"loadlikes()\"\n          type=\"button\"\n          btnRadio=\"liked\"\n          [(ngModel)]=\"predicate\"\n        >\n          members I like\n        </button>\n        <button\n          class=\"btn btn-outline-secondary m-2\"\n          name=\"likedBy\"\n          (click)=\"loadlikes()\"\n          type=\"button\"\n          btnRadio=\"likedBy\"\n          [(ngModel)]=\"predicate\"\n        >\n          Mmebers who like me\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"text-center mt-3\"></div>\n<ul class=\"row\">\n  <div *ngFor=\"let member of members\" class=\"col\">\n    <app-member-card [member]=\"member\" [like]=\"false\"></app-member-card>\n  </div>\n</ul>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pagechanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Member } from 'src/app/_models/Member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PresenceService } from './../../_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css'],\n})\nexport class MemberCardComponent implements OnInit {\n@Input() member:Member\n@Input()like:boolean=false\n\n  constructor(private MembersService: MembersService,private Toastr :ToastrService ,public presence:PresenceService ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  addLike(member:Member){\n    this.MembersService.addLike(member.userName).subscribe(()=>{\n      if(!this.like){\n        this.like =!this.like\n      this.Toastr.success('you have liked '+member.knownAs);\n    }else{\n      this.Toastr.success('you have unliked '+member.knownAs);\n\n    }\n  })\n  }\n\n\n\n\n}\n","<div class=\"\">\n  <div class=\"our-team\">\n    <div class=\"picture\">\n      <img\n        class=\"img-fluid\"\n        [class.online]=\"\n          (presence.OnlineUSers$ | async).includes(member.userName)\n        \"\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\n      />\n    </div>\n    <div class=\"team-content\">\n      \n      <h3 class=\"name\">{{ member.userName }}</h3>\n      <h4 class=\"title\">Age : {{ member.age }}</h4>\n    </div>\n    <ul class=\"social\">\n      <li>\n        <a\n          href=\"#\"\n          routerLink=\"/members/{{ member.userName }}\"\n          aria-hidden=\"true\"\n        >\n          <i class=\"fa fa-user\"></i>\n        </a>\n      </li>\n      <li>\n        <a (click)=\"addLike(member)\" aria-hidden=\"true\">\n          <i class=\"fa fa-heart\"></i\n        ></a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          routerLink=\"/members/{{ member.userName }}\"\n          [queryParams]=\"{ tab: 4 }\"\n          aria-hidden=\"true\"\n        >\n          <i class=\"fa fa-envelope\"></i\n        ></a>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MembersService } from './../../_services/members.service';\nimport { Member } from 'src/app/_models/Member';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TimeagoIntl } from 'ngx-timeago';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { Message } from './../../_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { take } from 'rxjs';\nimport { User } from './../../_models/user';\n\n@Component({\n  selector: 'app-member-details',\n  templateUrl: './member-details.component.html',\n  styleUrls: ['./member-details.component.css']\n})\nexport class MemberDetailsComponent implements OnInit,OnDestroy {\nmember:Member\nuser:User\n@ViewChild(\"membertabs\",{static:true}) memberTabs:TabsetComponent;\nactiveTab:TabDirective;\n@Input() messages:Message[]=[]\nshow:Boolean=false\ngalleryOptions: NgxGalleryOptions[];\ngalleryImages: NgxGalleryImage[];\n\n  constructor(private memberservice:MembersService,private route:ActivatedRoute, private messageservice:MessageService,\n    public presence:PresenceService,private accountService:AccountService) { \n      this.accountService.CurrentUser$.pipe(take(1)).subscribe(user=>{\n        this.user=user\n      })\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data=>{\n  this.member=data?.['member']\n})\n\n    this.galleryOptions=[{\n      width:\"350px\",\n      height:\"350px\",\n      imagePercent:100,\n      thumbnailsColumns:4,\n      arrowPrevIcon :\"fa fa-angle-double-left\",\n      arrowNextIcon :\"fa fa-angle-double-right\",\n      imageAnimation:NgxGalleryAnimation.Fade,\n      imageAutoPlay :true,\n      imageAutoPlayInterval :3000,\n      imageAutoPlayPauseOnHover :true,\n      preview:false   \n    }]\n  this.galleryImages=this.getImages();\n\n       this.route.queryParams.subscribe(params=>{\n         params?.['tab'] ? this.selectTab(params?.['tab']):this.selectTab(0)\n       })\n\n\n  }\n\n  getImages():NgxGalleryImage[]{\n    const imageUrls=[];\n    if (this.member.photos.length> 0) {\n       for(const photo of this.member.photos){\n         imageUrls.push({\n          small:photo?.url,\n          medium:photo?.url,\n          big:photo?.url\n        })\n      }\n    }\n     \n      return imageUrls;\n  }\n\nshowSection(){\n      this.show=true;\n  }\ntoggleSection(){\n  this.show=!this.show\n}\nloadMessages(){\n  this.messageservice.getMessageThread(this.member.userName).subscribe(respond=>{\n    this.messages=respond\n  })\n}\n\nonTabActivated(data:TabDirective){\n    this.activeTab=data\nif (this.activeTab.heading===\"Messages\" && this.messages.length===0){\nthis.messageservice.CreateHubConnection(this.user,this.member.userName)\n}else{\n  this.messageservice.StopHubConnection();\n}\n}\n\nselectTab(tabId:number){\n  this.memberTabs.tabs[tabId].active=true;\n}\n\n\nngOnDestroy(): void {\n   this.messageservice.StopHubConnection();\n  }\n}\n","<div class=\"container emp-profile\">\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <div class=\"profile-img\">\n        <img\n          [src]=\"member.photoUrl || './assets/user.png'\"\n          alt=\"{{ member.knownAs }}\"\n        />\n      </div>\n      <div class=\"\">\n        <button type=\"submit\" class=\"btn btn-outline-info ml-3\">Like</button>\n        <button\n          type=\"submit\"\n          (click)=\"selectTab(4)\"\n          class=\"btn btn-outline-success m-3\"\n        >\n          Message\n        </button>\n      </div>\n    </div>\n\n    <div class=\"col-md-9\" style=\"overflow: hidden\">\n      <div class=\"profile-head\">\n        <div\n          class=\"mb-2\"\n          *ngIf=\"(presence.OnlineUSers$ | async).includes(member.userName)\"\n        >\n          <i class=\"fa fa-user-circle text-success\"></i> Online Now\n        </div>\n        <h5>{{ member.userName }}</h5>\n\n        <p class=\"profile-rating age\">\n          AGE : <span>{{ member.age }}</span>\n        </p>\n        <tabset class=\"member-tabset\" #membertabs>\n          <!-- About -->\n          <tab heading=\"About\" (selectTab)=\"onTabActivated($event)\">\n            <!-- homesection -->\n            <div\n              id=\"home\"\n              class=\"tab-pane fade show active\"\n              role=\"tabpanel\"\n              aria-labelledby=\"home-tab\"\n            >\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <label>Name</label>\n                </div>\n                <div class=\"col-md-6\">\n                  <p>{{ member.userName }}</p>\n                </div>\n                <div class=\"col-md-6\">\n                  <label>Gender</label>\n                </div>\n                <div class=\"col-md-6\">\n                  <p>{{ member.gender }}</p>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <label>last Active</label>\n                </div>\n                <div class=\"col-md-6\">\n                  <p>{{ member.lastActive | timeago: \"live\" }}</p>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <label>Member Since</label>\n                </div>\n                <div class=\"col-md-6\">\n                  <p>{{ member.created | date: \"dd MMM yyy\" }}</p>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <label>city</label>\n                </div>\n                <div class=\"col-md-6\">\n                  <p>{{ member.city }}</p>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <label>Country</label>\n                </div>\n                <div class=\"col-md-6\">\n                  <p>{{ member.country }}</p>\n                </div>\n              </div>\n            </div>\n          </tab>\n          <!-- Description -->\n          <tab heading=\"Description\" (selectTab)=\"onTabActivated($event)\">\n            <div>\n              <div class=\"row\">\n                <div>\n                  <p>{{ member.introduction }}</p>\n                </div>\n              </div>\n            </div>\n          </tab>\n          <!-- lookingFor -->\n          <tab heading=\"Looking For\" (selectTab)=\"onTabActivated($event)\">\n            <div id=\"profile\" class=\"tab-pane\">\n              <div class=\"row\">\n                <div>\n                  <p>{{ member.lookingFor }}</p>\n                </div>\n              </div>\n            </div>\n          </tab>\n          <tab heading=\"Photos\">\n            <ngx-gallery\n              style=\"display: inline-block; margin-bottom: 20px\"\n              [options]=\"galleryOptions\"\n              [images]=\"galleryImages\"\n              class=\"ngx-gallery\"\n            ></ngx-gallery>\n          </tab>\n          <tab heading=\"Messages\" (selectTab)=\"onTabActivated($event)\">\n            <app-member-messages\n              [username]=\"member.userName\"\n            ></app-member-messages>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { take } from 'rxjs';\nimport { Member } from 'src/app/_models/Member';\nimport { User } from 'src/app/_models/user';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { AccountService } from './../../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild(\"editform\") editform:NgForm\nmember:Member;\nuser:User;\nedit:boolean=false\n\n@HostListener('window:beforeunload',['$event'])unloadNotification($event:any){\n  if (this.editform.dirty) {\n    $event.returnValue=true\n  }\n}\n\n  constructor(\n    private accountservice:AccountService\n    ,public memberservice:MembersService,\n    public toastr:ToastrService\n              ) {\n             this.accountservice.CurrentUser$.pipe(take(1)).subscribe(\n                  user=>{\n                    this.user=user\n                  }\n                )\n               }\n\n  ngOnInit(): void {\n     this.loadmember() \n  }\n      loadmember(){\n        this.memberservice.getMember(this.user.userName).subscribe(\n            member=>{\n              this.member=member\n            }\n        )\n      }\n      updatemember(){\n       this.memberservice.updateMember(this.member).subscribe(()=>{\n        this.toastr.success(\"form Updated\")\n       this.edit=false  \n       this.editform.reset(this.member);\n       })\n      \n      }\n\n}\n","<div class=\"container emp-profile\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col-md-7\">\n      <div class=\"text-lg-center pt-lg-5\">\n        <h1>{{ member.userName }}</h1>\n        <h4>Web Developer and Designer</h4>\n        <p class=\"profile-rating age\">\n          AGE : <span>{{ member.age }}</span>\n        </p>\n      </div>\n    </div>\n    <div class=\"col-md-4 d-flex flex-column\">\n      <div class=\"profile-img justify-content-center\">\n        <img\n          class=\"memberphoto\"\n          src=\"{{ member.photoUrl || './assets/user.png' }}\"\n          alt=\"{{ member.knownAs }}\"\n        />\n        <div class=\"file btn btn-lg btn-primary\" *ngIf=\"edit\">\n          Change Photo\n          <input type=\"file\" name=\"file\" />\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-success mt-2\"\n            (click)=\"edit = true\"\n            (click)=\"toastr.info('Any unsaved changes will be lost')\"\n          >\n            edit profile\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row mt-5\">\n    <div class=\"mt-4\" *ngIf=\"member\">\n      <form #editform=\"ngForm\" id=\"updateForm\" (ngSubmit)=\"updatemember()\">\n        <div class=\"profile-head\">\n          <tabset class=\"member-tabset\">\n            <!-- About -->\n            <tab heading=\"About\">\n              <!-- homesection -->\n              <div\n                id=\"home\"\n                class=\"tab-pane fade show active\"\n                role=\"tabpanel\"\n                aria-labelledby=\"home-tab\"\n              >\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <label>Name</label>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <p>{{ member.userName }}</p>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <label>Gender</label>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <p *ngIf=\"!edit\">{{ member.gender }}</p>\n                    <input\n                      [(ngModel)]=\"member.gender\"\n                      type=\"text\"\n                      name=\"gender\"\n                      *ngIf=\"edit\"\n                      value=\"{{ member?.gender }}\"\n                    />\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <label>city</label>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <p *ngIf=\"!edit\">{{ member.city }}</p>\n                    <input\n                      [(ngModel)]=\"member.city\"\n                      type=\"text\"\n                      name=\"city\"\n                      *ngIf=\"edit\"\n                      value=\"{{ member.city }}\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <label>Country</label>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <p *ngIf=\"!edit\">{{ member.country }}</p>\n                    <input\n                      [(ngModel)]=\"member.country\"\n                      type=\"text\"\n                      name=\"country\"\n                      *ngIf=\"edit\"\n                      value=\"{{ member.country }}\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </tab>\n            <!-- Description -->\n            <tab heading=\"Description\">\n              <div>\n                <div class=\"row\">\n                  <div>\n                    <p *ngIf=\"!edit\">{{ member.introduction }}</p>\n                    <textarea\n                      [(ngModel)]=\"member.introduction\"\n                      *ngIf=\"edit\"\n                      name=\"introduction\"\n                      cols=\"80\"\n                      placeholder=\"{{ member?.introduction }}\"\n                      rows=\"6\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </tab>\n            <!-- lookingFor -->\n            <tab heading=\"Looking For\">\n              <div id=\"profile\" class=\"tab-pane\">\n                <div class=\"row\">\n                  <div>\n                    <p *ngIf=\"!edit\">{{ member.lookingFor }}</p>\n                    <textarea\n                      [(ngModel)]=\"member.introduction\"\n                      *ngIf=\"edit\"\n                      cols=\"80\"\n                      name=\"introduction\"\n                      rows=\"6\"\n                      placeholder=\"{{ member.lookingFor }}\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </tab>\n            <tab heading=\"interests\">\n              <div id=\"profile\" class=\"tab-pane\">\n                <div class=\"row\">\n                  <div>\n                    <p *ngIf=\"!edit\">{{ member.interests }}</p>\n                    <textarea\n                      [(ngModel)]=\"member.interests\"\n                      *ngIf=\"edit\"\n                      cols=\"80\"\n                      name=\"interests\"\n                      rows=\"6\"\n                      placeholder=\"{{ member.interests }}\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </tab>\n            <tab heading=\"Photos\">\n              <app-photo-editor [member]=\"member\"></app-photo-editor>\n            </tab>\n          </tabset>\n        </div>\n        <button\n          [disabled]=\"!editform.dirty\"\n          form=\"updateForm\"\n          type=\"submit\"\n          class=\"btn btn-outline-success col-12\"\n        >\n          Save changes\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Member } from 'src/app/_models/Member';\nimport { MembersService } from './../../_services/members.service';\nimport { Observable, take } from 'rxjs';\nimport { Pagination } from './../../_models/pagination';\nimport { userParmas } from './../../_models/userParmas';\nimport { AccountService } from './../../_services/account.service';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-member-lists',\n  templateUrl: './member-lists.component.html',\n  styleUrls: ['./member-lists.component.css']\n})\nexport class MemberListsComponent implements OnInit {\nmembers:Member[];\nuser:User;\n\nactiveButton:string\npagination:Pagination;\n\nUserparams:userParmas;\n\ngenderList=[{value:'male',Display:'Males'},{value:'female',Display:'Females'}]\n\n\n  constructor(public memberservice:MembersService,private AccountService:AccountService) \n    { \n      this.AccountService.CurrentUser$.pipe(take(1)).subscribe(user=>{\n          this.user=user;\n          this.Userparams=new userParmas(user);\n      })\n\n    }\n\n  ngOnInit(): void {\nthis.loadMembers();\n\n  }\n\n\n  loadMembers(){\n    //userParams is changing from the template Form\n    this.memberservice.getMembers(this.Userparams).subscribe(response=>{\n      this.members=response.result ;\n      this.pagination=response.Pagination;\n  \n    })\n \n  }\n  resetfilter(){\n    this.Userparams=new userParmas(this.user);\n    this.loadMembers();\n  }\n  pageChanged(event:any){\n    this.Userparams.PageNumber=event.page\n    this.loadMembers()\n\n  }\n\n}\n","<div class=\"container mt-3 alert alert-success\">\n  <div class=\"row justify-content-md-center\">\n    <form\n      #form=\"ngForm\"\n      class=\"form-inline row align-items-start\"\n      (ngSubmit)=\"loadMembers()\"\n      autocomplete=\"off\"\n    >\n      <div class=\"col-12 col-md-7\">\n        <div class=\"form-group px-2\">\n          <label for=\"minAge\"> Age from: </label>\n          <input\n            type=\"number\"\n            name=\"minAge\"\n            [(ngModel)]=\"Userparams.minAge\"\n            class=\"form-control m-2\"\n            style=\"width: 70px\"\n          />\n        </div>\n        <div class=\"form-group px-2\">\n          <label for=\"maxAge\"> Age from: </label>\n          <input\n            type=\"number\"\n            name=\"maxAge\"\n            [(ngModel)]=\"Userparams.maxAge\"\n            class=\"form-control m-2\"\n            style=\"width: 70px\"\n          />\n        </div>\n        <div class=\"form-group px-2\">\n          <label for=\"maxAge\"> show: </label>\n          <select\n            [(ngModel)]=\"Userparams.gender\"\n            name=\"gender\"\n            style=\"width: 170px\"\n            class=\"form-control ml-1\"\n          >\n            <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n              {{ gender.Display }}\n            </option>\n          </select>\n        </div>\n        <button class=\"btn btn-primary m-1\" type=\"submit\">Apply Filters</button>\n        <button (click)=\"resetfilter()\" class=\"btn btn-info ml-1\" type=\"submit\">\n          reset Filters\n        </button>\n      </div>\n\n      <div class=\"row col-12 col-md-\">\n        <div class=\"btn-group\">\n          <button\n            class=\"btn btn-outline-secondary m-2\"\n            name=\"lastActive\"\n            (click)=\"loadMembers()\"\n            type=\"button\"\n            btnRadio=\"lastActive\"\n            [(ngModel)]=\"Userparams.orderBy\"\n          >\n            Last Active\n          </button>\n          <button\n            class=\"btn btn-outline-secondary m-2\"\n            name=\"created\"\n            (click)=\"loadMembers()\"\n            type=\"button\"\n            btnRadio=\"created\"\n            [(ngModel)]=\"Userparams.orderBy\"\n          >\n            Newest\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n<div class=\"text-center mt-3\" *ngIf=\"form.submitted\">\n  <h2 class=\"p-3 mb-2 bg-success text-white\">\n    Your Matches - {{ pagination?.totalItems }} found\n  </h2>\n</div>\n<ul class=\"row\">\n  <div *ngFor=\"let member of members\" class=\"col\">\n    <app-member-card [member]=\"member\">\n      {{ member.knownAs }}\n    </app-member-card>\n  </div>\n</ul>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"(MessageService.messageThread$ | async).length === 0\">\n      No Messages Yet ..Say Hi\n    </div>\n    <ul\n      #scrollMe\n      style=\"overflow: scroll; height: 500px\"\n      [scrollTop]=\"scrollMe.scrollHeight\"\n      *ngIf=\"(MessageService.messageThread$ | async).length > 0\"\n      class=\"chat\"\n    >\n      <li *ngFor=\"let message of MessageService.messageThread$ | async\">\n        <div>\n          <span class=\"chat-img right\">\n            <img\n              class=\"rounded-circle\"\n              src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\n              alt=\"{{ message.senderUserName }}\"\n            />\n          </span>\n\n          <div class=\"chat-body mt-3\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{\n                  message.messageSent | timeago\n                }}</span>\n                <span\n                  class=\"text-danger\"\n                  *ngIf=\"\n                    !message.dateRead && message.senderUserName !== username\n                  \"\n                >\n                  (unread)\n                </span>\n                <span\n                  class=\"text-success\"\n                  *ngIf=\"\n                    message.dateRead && message.senderUserName !== username\n                  \"\n                >\n                  (read {{ message.dateRead | timeago }})\n                </span>\n              </small>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-footer\">\n    <form class=\"input-group\" #messageform=\"ngForm\" (ngSubmit)=\"sendMessage()\">\n      <input\n        name=\"messageContent\"\n        required\n        [(ngModel)]=\"messageContent\"\n        type=\"text\"\n        class=\"form-control input-sm\"\n        placeholder=\"send a private Maessage\"\n      />\n      <div class=\"input-group-append\">\n        <button [disabled]=\"!messageform.valid\" class=\"btn btn-primary\">\n          Send\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { Message } from './../../_models/message';\nimport { MembersService } from './../../_services/members.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  changeDetection:ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n@ViewChild('messageform') messageform:NgForm\n@Input() messages:Message[]=[]\n@Input() username:string;\n\nmessageContent:string\n\n\n  constructor(public MessageService:MessageService) { }\n\n  ngOnInit(): void {\n  }\n  \nsendMessage(){\n  this.MessageService.sendMessage(this.username,this.messageContent).then(()=>{\n    this.messageform.reset();\n  })\n}\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs';\nimport { Member } from 'src/app/_models/Member';\nimport { User } from 'src/app/_models/user';\nimport { environment } from './../../../environments/environment';\nimport { AccountService } from './../../_services/account.service';\nimport { MembersService } from './../../_services/members.service';\nimport { Photo } from './../../_models/Photo';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n\n@Input() member:Member;\nuploader:FileUploader;\nhasBaseDropZoneOver=false;\nbaseUrl=environment.apiUrl;\nuser:User\n  constructor(\n    private accountService :AccountService,\n    private memberService:MembersService\n    ) { \n    this.accountService.CurrentUser$.pipe(take(1)).subscribe(user=>\n      this.user=user)\n     \n\n  }\n\n\n  ngOnInit(): void {\n    this.initializeUploader()\n\n     console.log(this.member.photos)\n  }\n//event attached to hasBaseDropZoneOver\n  fileOverBase(e:any){\n    this.hasBaseDropZoneOver=e;\n  }\n\n\n\n\n  //to initialize the uploader service FileUploader\n  initializeUploader(){\n    this.uploader=new  FileUploader({\n      url:this.baseUrl+'users/add-photo',\n      authToken:'Bearer '+this.user.token,\n      isHTML5:true,\n      allowedFileType:[\"image\"],\n      removeAfterUpload:true,\n      autoUpload:false,\n      maxFileSize:10*1024*1024\n    });\n      //to disable the credentials sent with the initializeUploader via authToken\n    this.uploader.onAfterAddingFile=(file)=>{\n      file.withCredentials=false;\n    }\n//add the photo after the response to user.photos array\n    this.uploader.onSuccessItem=(item,response,status,header)=>{\n      if(response){\n      const photo:Photo=JSON.parse(response)\n      this.member.photos.push(photo)\n      if(photo.isMain){\n        this.user.photoUrl=photo.url;\n        this.member.photoUrl=photo.url;\n        this.accountService.setcurrentuser(this.user);\n      }\n      }\n    }\n\n  }\n\n\n  setmainPhoto(photo:Photo){\n      this.memberService.setmainPhoto(photo.id).subscribe(\n        ()=>{\n        this.user.photoUrl=photo.url;\n        this.accountService.setcurrentuser(this.user);\n        this.member.photoUrl=photo.url;\n        this.member.photos.forEach(\n          p=>{\n            if(p.isMain)p.isMain=false;\n            if(p.id==photo.id)p.isMain=true;\n\n          })\n      }\n      )\n  }\n\n  deletephoto(photo :Photo){\n  this.memberService.deletePhoto(photo.id).subscribe(()=>{\n    this.member.photos=this.member.photos.filter(x=>x.id != photo.id)\n    })\n  }\n\n}\n","<div class=\"row mt-3\">\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n    <img\n      class=\"img-thumbnail p-1\"\n      [class.not-approved]=\"!photo.isApproved\"\n      src=\"{{ photo.url }}\"\n      alt=\"{{ photo.url }}\"\n    />\n\n    <div class=\"text-center img-text\" *ngIf=\"!photo.isApproved\">\n      <span class=\"text-danger\">Awaiting approval</span>\n    </div>\n\n    <div class=\"text-center\">\n      <button\n        [disabled]=\"photo.isMain || !photo.isApproved\"\n        (click)=\"setmainPhoto(photo)\"\n        [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-outline-success'\"\n        class=\"btn btn-sm\"\n      >\n        Main\n      </button>\n      <button\n        [disabled]=\"photo.isMain || !photo.isApproved\"\n        [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-outlinesuccess'\"\n        (click)=\"deletephoto(photo)\"\n        class=\"btn btn-sm btn-danger\"\n      >\n        <i class=\"fa fa-trash\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-md-3\">\n    <h3>Add Photos</h3>\n\n    <div\n      ng2FileDrop\n      [ngClass]=\"{ 'nv-file-over': hasBaseDropZoneOver }\"\n      (fileOver)=\"fileOverBase($event)\"\n      [uploader]=\"uploader\"\n      class=\"card bg-faded p-3 text-center mb-3 my-drop-zone nv-file-over\"\n    >\n      <i class=\"fa fa-upload fa-3x\"></i>\n      Drop Photo Here\n    </div>\n\n    Multiple\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n    Single\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div\n    class=\"col-md-9\"\n    style=\"margin-bottom: 40px\"\n    *ngIf=\"uploader?.queue?.length\"\n  >\n    <h3>Upload queue</h3>\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th width=\"50%\">Name</th>\n          <th>Size</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of uploader.queue\">\n          <td>\n            <strong>{{ item?.file?.name }}</strong>\n          </td>\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>\n            {{ item?.file?.size / 1024 / 1024 | number: \".2\" }} MB\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div>\n      <div>\n        Queue progress:\n        <div class=\"progress\">\n          <div\n            class=\"progress-bar\"\n            role=\"progressbar\"\n            [ngStyle]=\"{ width: uploader.progress + '%' }\"\n          ></div>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-success btn-s mt-2\"\n        (click)=\"uploader.uploadAll()\"\n        [disabled]=\"!uploader.getNotUploadedItems().length\"\n      >\n        <span class=\"fa fa-upload\"></span> Upload all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-warning btn-s mt-2\"\n        (click)=\"uploader.cancelAll()\"\n        [disabled]=\"!uploader.isUploading\"\n      >\n        <span class=\"fa fa-ban\"></span> Cancel all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-s mt-2\"\n        (click)=\"uploader.clearQueue()\"\n        [disabled]=\"!uploader.queue.length\"\n      >\n        <span class=\"fa fa-trash\"></span> Remove all\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../_services/message.service';\nimport { Pagination } from './../_models/pagination';\nimport { Message } from './../_models/message';\nimport { ConfirmService } from './../_services/confirm.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\nPageNumber=1;\nPageSize=5;\npagination:Pagination\nmessages:Message[];\ncontainer=\"unread\"\nloading=false;\n  constructor(private messageservice:MessageService,private ConfirmService:ConfirmService) { }\n\n  ngOnInit(): void {\n     this.loadMessages();\n }\nloadMessages(){\n    this.loading=true;\n\n  this.messageservice.getMessages(this.PageNumber,this.PageSize,this.container).subscribe(response=>{\n    this.pagination=response.Pagination,\n    this.messages=response.result\n    this.loading=false\n    \n  })\n}\npageChanges(event:any){\n  this.PageNumber=event.page;\n  this.loadMessages()\n}\nDeletemessage(id:number){\n  //Confirmation\nthis.ConfirmService.Confirm(\"confirm Delete Message\", \"Are You Sure You want to delete the message\").subscribe(result=>{\n  if (result) {\nthis.messageservice.Deletmessage(id).subscribe(()=>{\nthis.messages.splice(this.messages.findIndex(m=>m.id==id),1)\n  })\n  }})\n}\n\n\n\n}\n","<div class=\"row mb-4\">\n  <div class=\"btn-group bg-dark\" name=\"container\">\n    <button\n      class=\"btn btn-outline-success m-2\"\n      btnRadio=\"unread\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope\"></i> Unread\n    </button>\n    <button\n      class=\"btn btn-outline-success m-2\"\n      btnRadio=\"inbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope-open\"></i> inbox\n    </button>\n    <button\n      class=\"btn btn-outline-success m-2\"\n      btnRadio=\"outbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-paper-plane\"></i> outbox\n    </button>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n  <h3>No Messages</h3>\n</div>\n<div class=\"row text-center\" *ngIf=\"messages?.length > 0\">\n  <table class=\"table-hover\" style=\"cursor: pointer\">\n    <tr>\n      <th style=\"width: 40%\">Message</th>\n      <th style=\"width: 20%\">From/To</th>\n      <th style=\"width: 20%\">Sent/received</th>\n      <th style=\"width: 20%\"></th>\n    </tr>\n\n    <tr\n      [hidden]=\"loading\"\n      *ngFor=\"let message of messages\"\n      routerLink=\"{{\n        container === 'outbox'\n          ? '/members/' + message.recipientUserName\n          : '/members/' + message.senderUserName\n      }}\"\n      [queryParams]=\"{ tab: 4 }\"\n    >\n      <td>{{ message.content }}</td>\n      <td>\n        <div *ngIf=\"container === 'outbox'\">\n          <img\n            class=\"img-circle rounded-circle mr-2 w-50 p-3\"\n            src=\"{{ message.recipientPhotoUrl || './assets/user.png' }}\"\n            alt=\"{{ message.recipientUserName }}\"\n          />\n          <strong>{{ message.recipientUserName | titlecase }}</strong>\n        </div>\n        <div *ngIf=\"container != 'outbox'\">\n          <img\n            class=\"img-circle rounded-circle mr-2 w-50 p-3\"\n            src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\n            alt=\"{{ message.senderUserName }}\"\n          />\n          <strong>{{ message.senderUserName | titlecase }}</strong>\n        </div>\n      </td>\n      <td>{{ message.messageSent | timeago }}</td>\n      <td>\n        <button\n          (click)=\"$event.stopPropagation()\"\n          (click)=\"Deletemessage(message.id)\"\n          class=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanges($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from './../_services/account.service';\nimport { BsDropdownConfig } from 'ngx-bootstrap/dropdown';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n providers: [{ provide: BsDropdownConfig, useValue: { isAnimated: true, autoClose: true } }]\n\n})\nexport class NavComponent implements OnInit {\n\nmodel:any={}\n\n\n  constructor(\n    public accountservice:AccountService,\n    private router:Router,\n    private toaster:ToastrService\n    ) { }\n\n  ngOnInit(): void {\n  }\n  login(){\n      this.accountservice.login(this.model).subscribe(response=>\n        {\n         this.router.navigateByUrl('/members')\n        })\n  }\n  logout(){\n    \n   this.accountservice.logout();\n         this.router.navigateByUrl('/')\n\n  }\n  \n \n  \n\n}\n","<div class=\"navbar navbar-expand-md navbar-dark bg-dark w-100\">\n  <div class=\"container\">\n    <!-- brandlink -->\n    <a class=\"navbar-brand\" routerLink=\"/\"> FaceMate</a>\n    <li class=\"nav-item nav nav-tabs\">\n      <a\n        class=\"nav-link\"\n        data-bs-toggle=\"tab\"\n        routerLink=\"/errors\"\n        routerLinkActive=\"active\"\n      >\n        Errors</a\n      >\n    </li>\n    <!-- links -->\n    <div class=\"bs-component\">\n      <ul class=\"navbar-nav navbar-brand mr-auto nav nav-tabs\">\n        <ng-container *ngIf=\"accountservice.CurrentUser$ | async\">\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              data-bs-toggle=\"tab\"\n              routerLink=\"/members\"\n              routerLinkActive=\"active\"\n            >\n              Matches</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              data-bs-toggle=\"tab\"\n              routerLink=\"/lists\"\n              routerLinkActive=\"active\"\n            >\n              Lists</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              routerLink=\"/messages\"\n              routerLinkActive=\"active\"\n              data-bs-toggle=\"tab\"\n            >\n              Messages</a\n            >\n          </li>\n          <li class=\"nav-item\" *appHasRole=\"['Admin', 'Moderator']\">\n            <a\n              class=\"nav-link\"\n              routerLink=\"/admin\"\n              routerLinkActive=\"active\"\n              data-bs-toggle=\"tab\"\n            >\n              admin</a\n            >\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <!-- linksEnd -->\n    <!-- dropdown -->\n    <div\n      class=\"btn-group\"\n      dropdown\n      *ngIf=\"accountservice.CurrentUser$ | async as User\"\n    >\n      <a\n        id=\"button-animated\"\n        dropdownToggle\n        type=\"button\"\n        class=\"btn btn-outline-success my-2 my-sm-0 dropdown-toggle btn-group-toggle\"\n        aria-controls=\"dropdown-animated\"\n      >\n        <img\n          class=\"m-0\"\n          src=\"{{ User.photoUrl || './assets/user.png' }}\"\n          alt=\"{{ User.userName }}\"\n        />\n        Welcome {{ User.knownas || User.userName | titlecase }}\n        <span class=\"caret\"></span>\n      </a>\n      <ul\n        id=\"dropdown-animated\"\n        *dropdownMenu\n        class=\"dropdown-menu mt-2\"\n        role=\"menu\"\n        aria-labelledby=\"button-animated\"\n      >\n        <li role=\"menuitem\">\n          <a class=\"dropdown-item\" routerLink=\"/member/edit\"> Edit profile</a>\n        </li>\n        <div class=\"dropdown-divider\"></div>\n\n        <li role=\"menuitem\">\n          <a class=\"dropdown-item\">Something else here</a>\n        </li>\n        <div class=\"dropdown-divider\"></div>\n        <li role=\"menuitem\">\n          <a class=\"dropdown-item\" (click)=\"logout()\">Log Out</a>\n        </li>\n      </ul>\n    </div>\n    <!-- dropdownended -->\n\n    <!-- loginform -->\n\n    <form\n      *ngIf=\"(accountservice.CurrentUser$ | async) === null\"\n      #loginform=\"ngForm\"\n      (ngSubmit)=\"login()\"\n      class=\"d-flex mt-2 mt-md-0 justify-content-end\"\n      autocomplete=\"off\"\n    >\n      <input\n        name=\"username\"\n        [(ngModel)]=\"model.username\"\n        class=\"form-control me-sm-2\"\n        type=\"text\"\n        placeholder=\"User Name\"\n        class=\"mx-1 p-2\"\n      />\n\n      <input\n        name=\"password\"\n        [(ngModel)]=\"model.password\"\n        class=\"form-control me-sm-2\"\n        type=\"password\"\n        placeholder=\"password\"\n        class=\"mx-1 p-2\"\n      />\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n        Login\n      </button>\n    </form>\n\n    <!-- loginform ended -->\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit, Output,EventEmitter } from '@angular/core';\nimport {  } from '@angular/core';\nimport { AccountService } from './../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n@Output()  CancelRegister=new EventEmitter();\n\nregisterForm:FormGroup;\nmaxDate:Date;\n\nvalidationsErrors:string[]=[]\n\nget control () {\n  return this.registerForm.controls as any\n}\n  constructor(\n    private accountservice:AccountService,\n    private toaster:ToastrService,\n    private FB :FormBuilder,\n    private router:Router\n    ) { }\n\n  ngOnInit(): void {\n    this.intializeForm()\n    this.maxDate=new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear()-18)\n     \n  }\n  intializeForm(){\n    // FormBuilder has array or group or control\n    this.registerForm=this.FB.group({\n      username:[\"\",Validators.required],\n      gender:[\"male\"],\n      knownas:[\"\",Validators.required],\n      dateofbirth:[\"\",Validators.required],\n      city:[\"\",Validators.required],\n      country:[\"\",Validators.required],\n      password:[\"\",\n      [Validators.required,\n        Validators.minLength(4),\n       Validators.maxLength(12)]],\n      confirmpassword:[\"\",\n      [Validators.required,\n        this.matchValues(\"password\")]],\n    })\n   this.registerForm.controls?.[\"password\"].valueChanges.subscribe(()=>{\n     this.registerForm.controls?.[\"confirmpassword\"].updateValueAndValidity();\n   })\n  }\n  matchValues(matchto:string):ValidatorFn{\n    return (control:AbstractControl)=>{\n      return control?.value ===control?.parent?.controls[matchto].value\n      ?null:{isMatching:true}\n    }\n\n  }\nRegister(){\n  this.accountservice.register(this.registerForm.value).subscribe(response=>{\n    this.router.navigateByUrl('/members')\n    this.cancel()\n  },error=>{\n    this.validationsErrors=error\n   \n  })\n}\ncancel(){\nthis.CancelRegister.emit(false);\n}\n\n\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header justify-content-center\">\n    <h5 class=\"modal-title font-weight-bold\">Sign up</h5>\n  </div>\n  <!-- (ngSubmit)=\"registerForm.valid && Register()\" to make sure user doesn`t click enter -->\n  <form\n    [formGroup]=\"registerForm\"\n    (ngSubmit)=\"registerForm.valid && Register()\"\n    autocomplete=\"off\"\n    class=\"row w-80 p-3\"\n  >\n    <div class=\"modal-body\">\n      <app-text-input\n        [formControl]=\"control['username']\"\n        [label]=\"'username'\"\n      ></app-text-input>\n\n      <app-text-input\n        [formControl]=\"control['knownas']\"\n        [label]=\"'known as'\"\n      ></app-text-input>\n      <!-- dd -->\n      <app-date-input\n        [formControl]=\"control['dateofbirth']\"\n        [label]=\"'date of birth'\"\n        [maxDate]=\"maxDate\"\n      ></app-date-input>\n      <!-- sk -->\n      <app-text-input\n        [formControl]=\"control['city']\"\n        [label]=\"'city'\"\n      ></app-text-input>\n\n      <app-text-input\n        [formControl]=\"control['country']\"\n        [label]=\"'country'\"\n      ></app-text-input>\n\n      <app-text-input\n        [formControl]=\"control['password']\"\n        [type]=\"'password'\"\n        [label]=\"'password'\"\n      ></app-text-input>\n      <app-text-input\n        [formControl]=\"control['confirmpassword']\"\n        [type]=\"'password'\"\n        [label]=\"'confirm password'\"\n      ></app-text-input>\n      <div class=\"\" style=\"height: 65px\">\n        <label class=\"control-label m-4\">I am a :</label>\n        <div class=\"form-check form-check-inline mw-20\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            formControlName=\"gender\"\n            name=\"gender\"\n            id=\"inlineRadio1\"\n            value=\"male\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio1\">Male</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            formControlName=\"gender\"\n            name=\"gender\"\n            id=\"inlineRadio2\"\n            value=\"female\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio2\">Female</label>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"validationsErrors.length > 0\">\n        <ul class=\"text-danger\">\n          <li *ngFor=\"let error of validationsErrors\">{{ error }}</li>\n        </ul>\n      </div>\n      <div class=\"modal-footer justify-content-center\">\n        <button\n          class=\"btn btn-success\"\n          [disabled]=\"!registerForm.valid\"\n          type=\"submit\"\n        >\n          Register\n        </button>\n\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary\"\n          data-bs-dismiss=\"modal\"\n          (click)=\"cancel()\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<!-- \n<form\n  #registerForm=\"ngForm\"\n  (ngSubmit)=\"Register()\"\n  autocomplete=\"off\"\n  class=\"row\"\n>\n  <h2 class=\"text-center text-primary col\">Sign up</h2>\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      class=\"form-control m-2\"\n      name=\"username\"\n      [(ngModel)]=\"model.userName\"\n      placeholder=\"User Name\"\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"password\"\n      class=\"form-control m-2\"\n      name=\"password\"\n      [(ngModel)]=\"model.password\"\n      placeholder=\"password\"\n    />\n  </div>\n\n  <div class=\"form group text-center col\">\n    <button class=\"btn btn-success\" type=\"submit\">Register</button>\n    <button\n      class=\"btn btn-light border border-success m-2\"\n      (click)=\"cancel()\"\n      type=\"button\"\n    >\n      Cancel\n    </button>\n  </div>\n</form> -->\n","export const environment = {\n  production: true,\n   apiUrl:\"api/\",\n   hubUrl:\"hubs/\"\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["environment","getpaginatedResult","getPaginationHeader","HubConnectionBuilder","BehaviorSubject","take","MessageService","constructor","http","apiUrl","hubUrl","MessageThreadSource","asObservable","CreateHubConnection","user","OtherUserName","hubConnection","withUrl","accessTokenFactory","token","withAutomaticReconnect","build","start","catch","err","console","log","on","messages","next","message","messageThread$","pipe","subscribe","Group","connections","some","x","username","forEach","dateRead","Date","now","StopHubConnection","stop","getMessages","pageNumber","PageSize","container","params","append","baseUrl","getMessageThread","userName","get","sendMessage","content","invoke","RecipientUserName","Deletmessage","id","delete","i0","factory","providedIn","MemberCardComponent","MembersService","Toastr","presence","ngOnInit","addLike","member","like","success","knownAs","selectors","inputs","decls","vars","consts","template","ctx","NgxGalleryAnimation","MemberDetailsComponent","memberservice","route","messageservice","accountService","CurrentUser$","data","galleryOptions","width","height","imagePercent","thumbnailsColumns","arrowPrevIcon","arrowNextIcon","imageAnimation","Fade","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","preview","galleryImages","getImages","queryParams","selectTab","imageUrls","photos","length","photo","push","small","url","medium","big","showSection","show","toggleSection","loadMessages","respond","onTabActivated","activeTab","heading","tabId","memberTabs","tabs","active","ngOnDestroy","viewQuery","MemberMessagesComponent","messageContent","then","messageform","reset","BsDropdownConfig","ctx_r6","ctx_r9","NavComponent","accountservice","router","toaster","login","model","response","navigateByUrl","logout","features","provide","useValue","isAnimated","autoClose"],"sourceRoot":"webpack:///"}